#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<string.h>

//void print(char* str)
//{
//	printf("hello:%s\n", str);
//}
//
//void test(void (*print)(char* ))
//{
//	printf("test\n");
//	print("bit");
//}
//int main()
//{
//	test(print);
//	return 0;
//}
struct str { char name[20]; int age; };
int compare_int(const void* e1, const void* e2)
{
	return (*(int*)e2) - (*(int*)e1);
}
int compare_float(const void* e1, const void* e2)
{
	if (((*(float*)e1) - (*(float*)e2)) == 0)
		return 0;
	else if (((*(float*)e1) > (*(float*)e2)))
		return -1;
	else
		return 1;
	/*return ((int)(*(float*)e1 - *(float*)e2));*/
}
int compare_str_age(const void* e1, const void* e2)
{
	return ((struct str*)e1)->age - ((struct str*)e2)->age;
}
void test1()
{
	int arr[10] = { 2,1,0,3,4,5,6,7,8,9 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	qsort(arr, sz, sizeof(arr[0]),compare_int);
	int i = 0;
	for ( i = 0; i < sz; i++)
	{
		printf("%d  ", arr[i]);
	}
	printf("\n");
}

void test2()
{
	float arr[10] = { 2.0,1.0,0,3.0,4.0,5.0,6.0,7.0,8.0,9.0 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	qsort(arr, sz, sizeof(arr[0]), compare_float);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%f  ", arr[i]);
	}
	printf("\n");

}


void test3()
{
	struct str s[3] = { {"张三",20 },{"李四",10 },{"王五",30 } };
	int sz = sizeof(s) / sizeof(s[0]);
	qsort(s, sz, sizeof(s[0]), compare_str_age);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%d  ", s->age);
	}
	printf("\n");

}

int compare_str_name(const void* e1, const void* e2)
{
	return strcmp(((struct str*)e1)->name , ((struct str*)e2)->name);
}

void test4()
{
	struct str s[3] = { {"zhangsan",20 },{"lisi",10 },{"wangwu",30 } };
	int sz = sizeof(s) / sizeof(s[0]);
	qsort(s, sz, sizeof(s[0]), compare_str_name);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf("%s  ", s->name);
	}
	printf("\n");

}
int main()
{
	test1();
	test2();
	test3();
	test4();
	return 0;
}
